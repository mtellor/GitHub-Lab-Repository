~/Library/CloudStorage/GoogleDrive-tellorin@usc.edu/.shortcut-targets-by-id/10yI1Vp2x44iBX7T-_NfWNeL7go8kwnUH/2. College - USC/1. Degree/1. Courses/Y4 Senior/Fall 2025/PM 566/Assignments/Hw 1/data/"2002.csv"
Library/CloudStorage/GoogleDrive-tellorin@usc.edu/.shortcut-targets-by-id/10yI1Vp2x44iBX7T-_NfWNeL7go8kwnUH/2. College - USC/1. Degree/1. Courses/Y4 Senior/Fall 2025/PM 566/Assignments/Hw 1/data/"2002.csv"
read.csv("~/Library/CloudStorage/GoogleDrive-tellorin@usc.edu/.shortcut-targets-by-id/10yI1Vp2x44iBX7T-_NfWNeL7go8kwnUH/2. College - USC/1. Degree/1. Courses/Y4 Senior/Fall 2025/PM 566/Assignments/Hw 1/data/2002.csv")
read.csv("~/Library/CloudStorage/GoogleDrive-tellorin@usc.edu/.shortcut-targets-by-id/10yI1Vp2x44iBX7T-_NfWNeL7go8kwnUH/2. College - USC/1. Degree/1. Courses/Y4 Senior/Fall 2025/PM 566/Assignments/Hw 1/data/2022.csv")
2002 <- read.csv("~/Library/CloudStorage/GoogleDrive-tellorin@usc.edu/.shortcut-targets-by-id/10yI1Vp2x44iBX7T-_NfWNeL7go8kwnUH/2. College - USC/1. Degree/1. Courses/Y4 Senior/Fall 2025/PM 566/Assignments/Hw 1/data/2002.csv")
data_2002 <- read.csv("~/Library/CloudStorage/GoogleDrive-tellorin@usc.edu/.shortcut-targets-by-id/10yI1Vp2x44iBX7T-_NfWNeL7go8kwnUH/2. College - USC/1. Degree/1. Courses/Y4 Senior/Fall 2025/PM 566/Assignments/Hw 1/data/2002.csv")
data_2022 <- read.csv("~/Library/CloudStorage/GoogleDrive-tellorin@usc.edu/.shortcut-targets-by-id/10yI1Vp2x44iBX7T-_NfWNeL7go8kwnUH/2. College - USC/1. Degree/1. Courses/Y4 Senior/Fall 2025/PM 566/Assignments/Hw 1/data/2022.csv")
View(data_2002)
View(data_2022)
dim(data_2002)
dim(data_2022)
head(data_2002)
tail(data_2002)
names(data_2002)
str(data_2002)
names(data_2022)
summary(data_2002$Daily.Mean.PM2.5.Concentration)
hist(data_2002$Daily.Mean.PM2.5.Concentration,
main = "PM2.5 Distribution - 2002",
xlab = "Daily Mean PM2.5",
col = "lightblue")
summary(data_2022$Daily.Mean.PM2.5.Concentration)
hist(data_2022$Daily.Mean.PM2.5.Concentration,
main = "PM2.5 Distribution - 2022",
xlab = "Daily Mean PM2.5",
col = "lightgreen")
summary(data_2002$Daily.Mean.PM2.5.Concentration)
hist(data_2002$Daily.Mean.PM2.5.Concentration,
main = "PM2.5 Distribution - 2002",
xlab = "Daily Mean PM2.5",
col = "lightblue")
dim(data_2002)
dim(data_2022)
head(data_2002)
tail(data_2002)
head(data_2002)
str(data_2002)
summary(data_2002$Daily.Mean.PM2.5.Concentration)
summary(data_2022$Daily.Mean.PM2.5.Concentration)
head(data_2022)
hist(data_2002$Daily.Mean.PM2.5.Concentration,
main = "PM2.5 Distribution - 2002",
xlab = "Daily Mean PM2.5",
col = "lightblue")
hist(data_2022$Daily.Mean.PM2.5.Concentration,
main = "PM2.5 Distribution - 2022",
xlab = "Daily Mean PM2.5",
col = "lightgreen")
data_2002 <- read.csv("2002_data.csv")
str(data_2002)
variable.names(data_2002)
variable.names(data_2022)
data_2002$Year <- 2002
data_2022$Year <- 2022
names(data_2002)[names(data_2002) == "Daily.Mean.PM2.5.Concentration"] <- "PM25"
names(data_2022)[names(data_2022) == "Daily.Mean.PM2.5.Concentration"] <- "PM25"
combined_data <- rbind(data_2002, data_2022)
str(combined_data)
head(combined_data)
tail(combined_data)
summary(combined_data$PM25)
table(combined_data$Year)
library(ggplot2)
library(dplyr)
variable.names(combined_data)
combined_data <- combined_data |>
rename(Lat = Site.Latitude,
Lon = Site.Longitude)
variable.names(combined_data)
ggplot(combined_data, aes(x = Lon, y = Lat, color = factor(Year))) +
geom_point(alpha = 0.6, size = 2) +
labs(title = "Monitoring Site Locations: 2002 vs 2022",
x = "Longitude", y = "Latitude", color = "Year") +
theme_minimal()
library(leaflet)
library(dplyr)
sites_2002 <- combined_data %>% filter(Year == 2002)
sites_2022 <- combined_data %>% filter(Year == 2022)
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = sites_2002,
~Lon, ~Lat,
color = "blue",
radius = 3,
label = ~paste("2002 Site:", Local.Site.Name),
group = "2002") %>%
addCircleMarkers(data = sites_2022,
~Lon, ~Lat,
color = "red",
radius = 3,
label = ~paste("2022 Site:", Local.Site.Name),
group = "2022") %>%
addLayersControl(overlayGroups = c("2002", "2022"),
options = layersControlOptions(collapsed = FALSE))
ggplot(combined_data, aes(x = Lon, y = Lat, color = factor(Year))) +
geom_point(alpha = 0.6, size = 2) +
labs(title = "Monitoring Site Locations: 2002 vs 2022",
x = "Longitude", y = "Latitude", color = "Year") +
theme_minimal()
ggplot(data_2002, aes(x = Lon, y = Lat, color = factor(Year))) +
geom_point(alpha = 0.6, size = 2) +
labs(title = "Monitoring Site Locations: 2002",
x = "Longitude", y = "Latitude", color = "Year") +
theme_minimal()
ggplot(data_2002, aes(x = Lon, y = Lat, color = factor(Year)))
ggplot(combined_data, aes(x = Lon, y = Lat, color = factor(Year))) +
geom_point(alpha = 0.6, size = 2) +
labs(title = "Monitoring Site Locations: 2002 vs 2022",
x = "Longitude", y = "Latitude", color = "Year") +
theme_minimal()
ggplot(data_2002, aes(x = Lon, y = Lat)) +
borders("world", colour = "gray80", fill = "gray95") +
geom_point(color = "blue", alpha = 0.6, size = 2) +
labs(title = "Monitoring Sites in 2002",
x = "Longitude", y = "Latitude") +
theme_minimal()
ggplot(data_2002, aes(x = "Lon", y = "Lat")) +
borders("world", colour = "gray80", fill = "gray95") +
geom_point(color = "blue", alpha = 0.6, size = 2) +
labs(title = "Monitoring Sites in 2002",
x = "Longitude", y = "Latitude") +
theme_minimal()
ggplot(combined_data, aes(x = Lon, y = Lat)) +
borders("world", colour = "gray80", fill = "gray95") +
geom_point(aes(color = factor(Year)), alpha = 0.6, size = 2) +
facet_wrap(~Year) +
labs(title = "Monitoring Site Locations by Year",
x = "Longitude", y = "Latitude", color = "Year") +
theme_minimal()
ggplot(combined_data, aes(x = Lon, y = Lat)) +
borders("california", colour = "gray80", fill = "gray95") +
geom_point(aes(color = factor(Year)), alpha = 0.6, size = 2) +
facet_wrap(~Year) +
labs(title = "Monitoring Site Locations by Year",
x = "Longitude", y = "Latitude", color = "Year") +
theme_minimal()
ggplot(combined_data, aes(x = Lon, y = Lat)) +
borders("state", regions = "california", colour = "gray80", fill = "gray95") +
geom_point(aes(color = factor(Year)), alpha = 0.6, size = 2) +
coord_quickmap(xlim = c(-125, -113), ylim = c(32, 42)) +
facet_wrap(~Year) +
labs(title = "Monitoring Site Locations in California: 2002 vs 2022",
x = "Longitude", y = "Latitude", color = "Year") +
theme_minimal()
ggplot(combined_data, aes(x = Lon, y = Lat, color = factor(Year))) +
geom_point(alpha = 0.6, size = 2) +
labs(title = "Monitoring Site Locations: 2002 vs 2022",
x = "Longitude", y = "Latitude", color = "Year") +
theme_minimal()
ggplot(data_2002, aes(x = "Lon", y = "Lat")) +
borders("world", colour = "gray80", fill = "gray95") +
geom_point(color = "blue", alpha = 0.6, size = 2) +
labs(title = "Monitoring Sites in 2002",
x = "Longitude", y = "Latitude") +
theme_minimal()
ggplot(combined_data, aes(x = Lon, y = Lat)) +
borders("state", regions = "california", colour = "gray80", fill = "gray95") +
geom_point(aes(color = factor(Year)), alpha = 0.6, size = 2) +
coord_quickmap(xlim = c(-125, -113), ylim = c(32, 42)) +
facet_wrap(~Year) +
labs(title = "Monitoring Site Locations in California: 2002 vs 2022",
x = "Longitude", y = "Latitude", color = "Year") +
theme_minimal()
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = sites_2002,
~Lon, ~Lat,
color = "blue",
radius = 3,
label = ~paste("2002 Site:", Local.Site.Name),
group = "2002") %>%
addCircleMarkers(data = sites_2022,
~Lon, ~Lat,
color = "red",
radius = 3,
label = ~paste("2022 Site:", Local.Site.Name),
group = "2022") %>%
addLayersControl(overlayGroups = c("2002", "2022"),
options = layersControlOptions(collapsed = FALSE))
is.na(data_2002)
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = sites_2002,
~Lon, ~Lat,
color = "blue",
radius = 3,
label = ~paste("2002 Site:", Local.Site.Name),
group = "2002") %>%
addCircleMarkers(data = sites_2022,
~Lon, ~Lat,
color = "red",
radius = 3,
label = ~paste("2022 Site:", Local.Site.Name),
group = "2022") %>%
addLayersControl(overlayGroups = c("2002", "2022"),
options = layersControlOptions(collapsed = FALSE))
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = sites_2002,
~Lon, ~Lat,
color = "blue",
radius = 3,
label = ~paste("2002 Site:", Local.Site.Name),
group = "2002") %>%
addCircleMarkers(data = sites_2022,
~Lon, ~Lat,
color = "red",
radius = 3,
label = ~paste("2022 Site:", Local.Site.Name),
group = "2022") %>%
addLayersControl(overlayGroups = c("2002", "2022"),
options = layersControlOptions(collapsed = FALSE))
sum(is.na(combined_data$PM25))
sum(combined_data$PM25 < 0)
sum(combined_data$PM25 > 1000)
tapply(combined_data$PM25 < 0, combined_data$Year, sum)
tapply(combined_data$PM25 < 0, combined_data$Year, sum)
tapply(combined_data$PM25 > 1000, combined_data$Year, sum)
table(combined_data$Year)
# Missing values by year
tapply(is.na(combined_data$PM25), combined_data$Year, sum)
neg_2022 <- combined_data[combined_data$Year == 2022 & combined_data$PM25 < 0, ]
# Show the dates
neg_2022$Date
# Count negative values by date
neg_counts <- table(neg_2022$Date)
barplot(neg_counts,
main = "Negative PM2.5 Values in 2022",
xlab = "Date",
ylab = "Count",
las = 2,         # Rotate x-axis labels
col = "red")
barplot(neg_counts,
main = "Negative PM2.5 Values in 2022",
xlab = "Date",
ylab = "Count",
las = 10,         # Rotate x-axis labels
col = "red")
barplot(neg_counts,
main = "Negative PM2.5 Values in 2022",
xlab = "Date",
ylab = "Count",
las = 9,         # Rotate x-axis labels
col = "red")
barplot(neg_counts,
main = "Negative PM2.5 Values in 2022",
xlab = "Date",
ylab = "Count",
las = 2,         # Rotate x-axis labels
col = "red")
barplot(neg_counts,
main = "Negative PM2.5 Values in 2022",
xlab = "Date",
ylab = "Count",
las = 2,
col = "darkred")
barplot(neg_counts,
main = "Negative PM2.5 Values in 2022",
xlab = "Date",
ylab = "Count",
las = 1,
col = "darkred")
barplot(neg_counts,
main = "Negative PM2.5 Values in 2022",
xlab = "Date",
ylab = "Count",
las = 1.8,
col = "darkred")
options(repr.plot.width = 12)  # If using RStudio or Jupyter
barplot(neg_counts,
main = "Negative PM2.5 Values in 2022",
xlab = "Date",
ylab = "Count",
las = 2,
col = "red")
names(neg_counts) <- format(as.Date(names(neg_counts)), "%b %d")
barplot(neg_counts,
main = "Negative PM2.5 Values in 2022",
xlab = "Date",
ylab = "Count",
las = 2,
col = "navyblue")
barplot(neg_counts,
main = "Negative PM2.5 Values in 2022",
xlab = "Date",
ylab = "Count",
las = 2,
col = "navyblue")
barplot(neg_counts,
main = "Negative PM2.5 Values in 2022",
xlab = "Date",
ylab = "Count",
las = 2,
col = "red")
barplot(neg_counts,
main = "Negative PM2.5 Values in 2022",
xlab = "Date",
ylab = "Count",
las = 2,
col = "navyblue")
neg_2022 <- combined_data[combined_data$Year == 2022 & combined_data$PM25 < 0, ]
neg_2022 <- neg_2022[order(neg_2022$Date), ]
neg_counts <- table(neg_2022$Date)
dates_sorted <- as.Date(names(neg_counts))
barplot(neg_counts[order(dates_sorted)],
main = "Negative PM2.5 Values in 2022",
xlab = "Date",
ylab = "Count",
las = 2,
col = "red")
## Plot
# Filter for negative PM2.5 values in 2022
neg_2022 <- combined_data[combined_data$Year == 2022 & combined_data$PM25 < 0, ]
# Make sure Date is in Date format
neg_2022$Date <- as.Date(neg_2022$Date)
hist(neg_2022$Date,
breaks = "weeks",  # You can also try "days" or "months"
main = "Histogram of Negative PM2.5 Values (2022)",
xlab = "Date",
ylab = "Frequency",
col = "tomato",
border = "white")
hist(neg_2022$Date,
breaks = "days"
main = "Histogram of Negative PM2.5 Values (2022)",
hist(neg_2022$Date,
breaks = "date"
main = "Histogram of Negative PM2.5 Values (2022)",
hist(neg_2022$Date,
breaks = "days"
main = "Histogram of Negative PM2.5 Values (2022)",
hist(neg_2022$Date,
breaks = "week"
main = "Histogram of Negative PM2.5 Values (2022)",
hist(neg_2022$Date,
breaks = "weeks"
main = "Histogram of Negative PM2.5 Values (2022)",
hist(neg_2022$Date,
breaks = "months"
main = "Histogram of Negative PM2.5 Values (2022)",
hist(neg_2022$Date,
breaks = "month"
main = "Histogram of Negative PM2.5 Values (2022)",
hist(neg_2022$Date,
breaks = "weeks"
main = "Histogram of Negative PM2.5 Values (2022)",
hist(neg_2022$Date,
breaks = "days",
main = "Histogram of Negative PM2.5 Values (2022)",
xlab = "Date",
ylab = "Frequency",
col = "navyblue",
border = "white")
hist(neg_2022$Date,
breaks = "weeks",
main = "Histogram of Negative PM2.5 Values (2022)",
xlab = "Date",
ylab = "Frequency",
col = "navyblue",
border = "white")
formatted_dates <- format(neg_2022$Date, "%m/%d")
hist(as.Date(neg_2022$Date),
breaks = "weeks",
main = "Negative PM2.5 Values in 2022",
xlab = "Date (MM/DD)",
ylab = "Frequency",
col = "tomato",
border = "white",
xaxt = "n")  # Turn off default x-axis
axis(1, at = seq(min(neg_2022$Date), max(neg_2022$Date), by = "weeks"),
labels = format(seq(min(neg_2022$Date), max(neg_2022$Date), by = "weeks"), "%m/%d"),
las = 2)
hist(as.Date(neg_2022$Date),
breaks = "weeks",
main = "Negative PM2.5 Values in 2022",
xlab = "Date (MM/DD)",
ylab = "Frequency",
col = "tomato",
border = "white",
xaxt = "n")  # Turn off default x-axis
# Add custom x-axis with MM/DD labels
axis(1, at = seq(min(neg_2022$Date), max(neg_2022$Date), by = "weeks"),
labels = format(seq(min(neg_2022$Date), max(neg_2022$Date), by = "weeks"), "%m/%d"),
las = 2)
hist(as.Date(neg_2022$Date),
breaks = "weeks",
main = "Negative PM2.5 Values in 2022",
xlab = "Date (MM/DD)",
ylab = "Frequency",
col = "tomato",
border = "white"
hist(as.Date(neg_2022$Date),
hist(as.Date(neg_2022$Date),
breaks = "days",
main = "Negative PM2.5 Values in 2022",
xlab = "Date (MM/DD)",
ylab = "Frequency",
col = "tomato",
border = "white"
