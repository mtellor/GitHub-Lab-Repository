# Install if needed
# install.packages("gghighlight")
# install.packages("ggtext")
library(tidyverse)
library(gghighlight)
install.packages("gghighlight")
install.packages("ggtext")
library(tidyverse)
library(gghighlight)
library(ggtext)
# Load data
sep <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-09-23/fide_ratings_september.csv")
# Prep: top 5 federations by average rating
top_feds <- sep %>%
group_by(fed) %>%
summarise(avg_rating = mean(rating, na.rm = TRUE), n = n()) %>%
filter(n >= 30) %>%
arrange(desc(avg_rating)) %>%
slice_head(n = 5) %>%
pull(fed)
# Plot
ggplot(sep, aes(x = rating, fill = fed)) +
geom_density(alpha = 0.6) +
gghighlight(fed %in% top_feds, label_key = fed, use_direct_label = TRUE) +
scale_fill_brewer(palette = "Set2") +
labs(
title = "<b style='color:#56B4E9;'>Top Federations</b> by Rating Distribution",
subtitle = "Highlighting federations with highest average Elo (Sep 2025)",
x = "Elo Rating",
y = "Density"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_markdown(),
legend.position = "none"
)
library(tidyverse)
# Load data
sep <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-09-23/fide_ratings_september.csv")
# Top 6 federations by average rating (with enough players)
top_feds <- sep %>%
group_by(fed) %>%
summarise(avg_rating = mean(rating, na.rm = TRUE), n = n()) %>%
filter(n >= 30) %>%
arrange(desc(avg_rating)) %>%
slice_head(n = 6) %>%
pull(fed)
# Filter and plot
sep %>%
filter(fed %in% top_feds) %>%
ggplot(aes(x = rating, fill = fed)) +
geom_density(alpha = 0.7, color = NA) +
facet_wrap(~ fed, scales = "free_y") +
scale_fill_brewer(palette = "Set2") +
labs(
title = "Rating Distributions of Top Federations",
subtitle = "FIDE Ratings (Sep 2025)",
x = "Elo Rating",
y = "Density"
) +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
library(tidyverse)
# Load data
sep <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-09-23/fide_ratings_september.csv")
# Federation name mapping (add more as needed)
fed_names <- tribble(
~fed, ~country,
"USA", "United States",
"RUS", "Russia",
"IND", "India",
"CHN", "China",
"UKR", "Ukraine",
"GER", "Germany",
"FRA", "France",
"ESP", "Spain",
"POL", "Poland",
"BRA", "Brazil"
)
# Top federations by average rating
top_feds <- sep %>%
group_by(fed) %>%
summarise(avg_rating = mean(rating, na.rm = TRUE), n = n()) %>%
filter(n >= 30) %>%
arrange(desc(avg_rating)) %>%
slice_head(n = 6) %>%
left_join(fed_names, by = "fed") %>%
pull(country)
# Merge full names
sep_named <- sep %>%
left_join(fed_names, by = "fed") %>%
filter(country %in% top_feds)
# Plot
ggplot(sep_named, aes(x = rating, fill = country)) +
geom_density(alpha = 0.7, color = NA) +
facet_wrap(~ country, scales = "fixed") +  # fixed y-axis
scale_fill_brewer(palette = "Set2") +
labs(
title = "Rating Distributions of Top Federations",
subtitle = "FIDE Ratings (Sep 2025)",
x = "Elo Rating",
y = "Density"
) +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
library(tidyverse)
# Load data
sep <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-09-23/fide_ratings_september.csv")
# Top 6 federations by average rating (with enough players)
top_feds <- sep %>%
group_by(fed) %>%
summarise(avg_rating = mean(rating, na.rm = TRUE), n = n()) %>%
filter(n >= 30) %>%
arrange(desc(avg_rating)) %>%
slice_head(n = 6) %>%
pull(fed)
# Filter and plot
sep %>%
filter(fed %in% top_feds) %>%
ggplot(aes(x = rating, fill = fed)) +
geom_density(alpha = 0.7, color = NA) +
facet_wrap(~ fed, scales = "free_y") +
scale_fill_brewer(palette = "Set2") +
labs(
title = "Rating Distributions of Top Federations",
subtitle = "FIDE Ratings (Sep 2025)",
x = "Elo Rating",
y = "Density"
) +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
library(tidyverse)
# Load September ratings
sep <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-09-23/fide_ratings_september.csv")
# Federation name mapping (expand as needed)
fed_names <- tribble(
~fed, ~country,
"AND", "Andorra",
"BIH", "Bosnia and Herzegovina",
"FIN", "Finland",
"KOS", "Kosovo",
"NED", "Netherlands",
"SRB", "Serbia"
)
# Merge full names
sep_named <- sep %>%
left_join(fed_names, by = "fed") %>%
filter(!is.na(country))  # keep only mapped federations
# Plot with fixed y-axis and full names
ggplot(sep_named, aes(x = rating, fill = country)) +
geom_density(alpha = 0.7, color = NA) +
facet_wrap(~ country, scales = "fixed") +  # fixed y-axis
scale_fill_brewer(palette = "Set2") +
labs(
title = "Rating Distributions by Federation",
subtitle = "FIDE Ratings (Sep 2025)",
x = "Elo Rating",
y = "Density"
) +
theme_minimal(base_size = 14) +
theme(
legend.position = "none",
strip.text = element_text(face = "bold")
)
# Plot with fixed y-axis and full names
ggplot(sep_named, aes(x = rating, fill = country)) +
geom_density(alpha = 0.7, color = NA) +
facet_wrap(~ country, scales = "fixed") +  # fixed y-axis
scale_fill_brewer(palette = "Set2") +
labs(
title = "Top 6 federations by average rating",
x = "Elo Rating",
y = "Density"
) +
theme_minimal(base_size = 14) +
theme(
legend.position = "none",
strip.text = element_text(face = "bold")
)
# Plot with fixed y-axis and full names
ggplot(sep_named, aes(x = rating, fill = country)) +
geom_density(alpha = 0.7, color = NA) +
facet_wrap(~ country, scales = "fixed") +  # fixed y-axis
scale_fill_brewer(palette = "Set2") +
labs(
title = "Top 6 federations by average rating",
x = "Elo Rating",
y = "Density"
) +
theme_minimal(base_size = 14) +
theme(
legend.position = "none",
strip.text = element_text(face = "bold")
)
# Plot with fixed y-axis and full names
ggplot(sep_named, aes(x = rating, fill = country)) +
geom_density(alpha = 0.7, color = NA) +
facet_wrap(~ country, scales = "fixed") +  # fixed y-axis
scale_fill_brewer(palette = "Set2") +
labs(
title = "Top 6 federations by average rating",
x = "Elo Rating",
y = "Rating Distribution"
) +
theme_minimal(base_size = 14) +
theme(
legend.position = "none",
strip.text = element_text(face = "bold")
)
# Plot with fixed y-axis and full names
ggplot(sep_named, aes(x = rating, fill = country)) +
geom_density(alpha = 0.7, color = NA) +
facet_wrap(~ country, scales = "fixed") +  # fixed y-axis
scale_fill_brewer(palette = "Set2") +
labs(
title = "Top 6 federations by average rating",
x = "Elo Rating",
y = "Rating Distribution"
) +
theme_minimal(base_size = 14) +
theme(
legend.position = "none",
strip.text = element_text(face = "bold")
)
library(tidyverse)
# Load September ratings
sep <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-09-23/fide_ratings_september.csv")
# Federation name mapping (expand as needed)
fed_names <- tribble(
~fed, ~country,
"AND", "Andorra",
"BIH", "Bosnia and Herzegovina",
"FIN", "Finland",
"KOS", "Kosovo",
"NED", "Netherlands",
"SRB", "Serbia"
)
# Merge full names
sep_named <- sep %>%
left_join(fed_names, by = "fed") %>%
filter(!is.na(country))  # keep only mapped federations
# Plot with fixed y-axis and full names
ggplot(sep_named, aes(x = rating, fill = country)) +
geom_density(alpha = 0.7, color = NA) +
facet_wrap(~ country, scales = "fixed") +  # fixed y-axis
scale_fill_brewer(palette = "Set2") +
labs(
title = "Top 6 federations by average rating",
x = "Elo Rating",
y = "Rating Distribution"
) +
theme_minimal(base_size = 14) +
theme(
legend.position = "none",
strip.text = element_text(face = "bold")
)
